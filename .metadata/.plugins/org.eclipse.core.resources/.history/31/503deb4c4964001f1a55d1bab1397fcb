package com.kosta.controller;

import java.util.List;

import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.kosta.entity.StudyGroup;
import com.kosta.entity.User;
import com.kosta.service.GroupService;

import lombok.RequiredArgsConstructor;


@Controller
@RequiredArgsConstructor
@RequestMapping("/studygroup/*")
public class StudyGroupController {
	private final GroupService groupService;
	
	
	@GetMapping("/list")
	public String getAllGroup(Model model) {
		List<StudyGroup> groupList = groupService.getAllGroup();
		System.out.println(groupList);
		model.addAttribute("list", groupList);
		return "studygroup/list";
	}
	@GetMapping("/add")//추가 화면
	public String addGroupPage() {
		
		return "studygroup/form";
	}
	@PostMapping("/add")//실제 추가
	public String addGroup(StudyGroup sg, @AuthenticationPrincipal User user) {
		groupService.save(sg, user);
		return "redirect:/studygroup/list";
		
	}
	@DeleteMapping("/delete")//삭제
	public String deleteGroup(@RequestParam("id") int id) {
		groupService.deleteGroup(id);
		return "redirect:/studygroup/list";
	}
	@GetMapping("/detail/{id}") //상세 페이지
	public String detailGroup(@PathVariable("id") int id, Model model) throws Exception {
		StudyGroup sg = groupService.findById(id);
		model.addAttribute("sg",sg);
		return "studygroup/detail";
	}
	

}
